services:
    db:
        image: postgres:17.2
        container_name: ${DB_HOSTNAME}
        hostname: ${DB_HOSTNAME}
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_DB: ${DB_NAME}
        ports:
            - 5432:5432
        volumes:
            - psql_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
            interval: 10s
            retries: 3
            timeout: 5s
            start_period: 10s
        networks:
            - app-network

    backend:
        container_name: backend
        stdin_open: true
        build:
            context: back/
            dockerfile: back.dockerfile
        environment:
            - DATABASE_URL
            - EXPRESS_PORT
        ports:
            - 3000:3000
            - 5555:5555
        depends_on:
            - db
        volumes:
            - type: bind
              source: ./back
              target: /back

            - /back/node_modules
        networks:
            - app-network
    
    frontend:
        container_name: frontend
        stdin_open: true
        image: node:23-alpine3.20
        build:
            context: front/
            dockerfile: front.dockerfile
        environment:
            - API_URL
        ports:
          - 80:4321
        volumes:
          - ./front:/front
          - /front/node_modules
        networks:
            - app-network 
volumes:
    psql_data:
networks:
    app-network:
        driver: bridge
